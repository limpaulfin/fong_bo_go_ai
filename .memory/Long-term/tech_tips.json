{
  "tips": [
    {
      "title": "Không commit hoặc push code tự động",
      "description": "Người dùng muốn tự quản lý việc commit và push code lên Git, không tự động thực hiện các thao tác này.",
      "tags": ["git", "workflow"]
    },
    {
      "title": "Indicator gọi API",
      "description": "Khi gọi API, hiển thị indicator '::.' thay vì '...' để người dùng biết đang có request.",
      "tags": ["ui", "api"]
    },
    {
      "title": "Cấu trúc Mô-đun",
      "description": "Mã nguồn đã được tái cấu trúc thành các module nhỏ dưới 200 LOC, với các package chính: src/core, src/text_processor, src/ui, src/utils và config.",
      "details": "Mỗi package có nhiệm vụ riêng: core xử lý bàn phím và clipboard, text_processor xử lý văn bản và API, ui quản lý giao diện, utils cung cấp các tiện ích, và config chứa cấu hình.",
      "tags": ["architecture", "code structure"]
    },
    {
      "title": "Double Right Shift và Double Backslash",
      "description": "Cả hai phím tắt này đều sử dụng RAG context để tăng độ chính xác khi auto-correct, và đều hoạt động trên mọi thiết bị.",
      "tags": ["feature", "keyboard"]
    },
    {
      "title": "Debug Logger cho Auto-correct",
      "description": "Module debug_logger.py cung cấp hai hàm chính: log_selected_text() hiển thị văn bản được chọn và log_correction() hiển thị kết quả của auto-correct với thông tin chi tiết về sự thay đổi.",
      "details": "log_correction() hiển thị văn bản gốc, văn bản đã sửa, độ dài trước và sau, và trạng thái thay đổi.",
      "tags": ["debugging", "logging", "auto-correct"]
    },
    {
      "title": "Giữ cấu trúc xuống dòng trong prompt",
      "description": "my_prompt.md đã được cập nhật để đảm bảo AI giữ nguyên cấu trúc xuống dòng khi auto-correct văn bản, đặc biệt quan trọng với danh sách, code, đoạn thơ.",
      "details": "Yêu cầu này được thêm vào cả phần Task và Note để nhấn mạnh tầm quan trọng.",
      "tags": ["prompt", "newline", "formatting"]
    },
    {
      "title": "Quy trình Git Sync/Push/Backup",
      "description": "Khi người dùng yêu cầu 'Push lên Git', 'Sync lên Git', 'Backup lên Git' hoặc các lệnh tương tự, luôn thực hiện theo trình tự: `git add .` (để thêm tất cả thay đổi), sau đó `git commit -m '{message}'` (với message phù hợp), và cuối cùng `git push origin {branch}`.",
      "details": "Luôn sử dụng `git add .` thay vì chỉ thêm các file cụ thể đã chỉnh sửa để đảm bảo tất cả thay đổi trong thư mục làm việc đều được đưa vào commit.",
      "tags": ["git", "workflow", "user preference"]
    },
    {
      "title": "KISS (Keep It Simple, Stupid)",
      "description": "Ưu tiên sự đơn giản, tránh phức tạp hóa quá mức (over-engineering) trong thiết kế và code.",
      "tags": ["principle", "design", "simplicity"]
    },
    {
      "title": "Agile (Nguyên tắc phát triển linh hoạt)",
      "description": "Phương pháp phát triển lặp lại, tăng dần, tập trung vào sự hợp tác, phản hồi nhanh và khả năng thích ứng với thay đổi.",
      "tags": ["principle", "methodology", "workflow"]
    },
    {
      "title": "YAGNI (You Ain't Gonna Need It)",
      "description": "Chỉ triển khai những chức năng thực sự cần thiết tại thời điểm hiện tại, tránh thêm các tính năng 'có thể cần trong tương lai'.",
      "tags": ["principle", "simplicity", "feature scope"]
    },
    {
      "title": "DRY (Don't Repeat Yourself)",
      "description": "Tránh lặp lại thông tin, logic hoặc code ở nhiều nơi. Thay vào đó, hãy trừu tượng hóa và tái sử dụng.",
      "tags": ["principle", "code quality", "maintainability"]
    },
    {
      "title": "SOLID Principles",
      "description": "Năm nguyên tắc thiết kế hướng đối tượng giúp code dễ hiểu, bảo trì và mở rộng: Single responsibility, Open/closed, Liskov substitution, Interface segregation, Dependency inversion.",
      "tags": ["principle", "oop", "design patterns", "maintainability"]
    },
    {
      "title": "Yoda Conditions",
      "description": "Viết điều kiện so sánh với hằng số/giá trị cố định ở bên trái (ví dụ: `null === $variable`) để tránh lỗi gán nhầm (`=`).",
      "tags": ["principle", "coding style", "bug prevention"]
    },
    {
      "title": "Pareto Principle (80/20 Rule)",
      "description": "Tập trung vào 20% yếu tố quan trọng nhất (nguyên nhân, công việc, tính năng) thường mang lại 80% kết quả.",
      "tags": ["principle", "prioritization", "efficiency"]
    },
    {
      "title": "No Hallucination (AI Principle)",
      "description": "Nguyên tắc yêu cầu AI chỉ cung cấp thông tin dựa trên dữ liệu đầu vào và kiến thức đã học, không tự 'sáng tạo' hay 'suy diễn' ra thông tin không có cơ sở.",
      "tags": ["principle", "ai", "reliability"]
    },
    {
      "title": "CRUD Operations",
      "description": "Bốn thao tác cơ bản để quản lý dữ liệu trong lưu trữ bền vững: Create (Tạo mới), Read (Đọc/Truy vấn), Update (Cập nhật), và Delete (Xóa).",
      "tags": ["principle", "data management", "database", "api"]
    }
  ],
  "performance_notes": [
    {
      "issue": "Text selection",
      "solution": "Cải thiện việc phát hiện text đã chọn bằng cách thêm log chi tiết và retry, hỗ trợ nhiều dòng."
    },
    {
      "issue": "API response time",
      "solution": "Hiển thị indicator '::.' khi đang gọi API để người dùng biết đang xử lý."
    }
  ],
  "feature_implementations": [
    {
      "feature": "Double Right Shift Auto-correct",
      "files": ["run_main.py", "src/utils/debug_logger.py", "src/core/clipboard_manager.py", "src/text_processor/api_handler.py"],
      "description": "Người dùng chọn text và nhấn Double Right Shift để kích hoạt auto-correct với RAG context, kết quả được hiển thị trong console và thay thế text gốc.",
      "completed": "2025-04-19"
    }
  ],
  "last_updated": "2025-04-24"
}
